{"ast":null,"code":"var _jsxFileName = \"/Users/nephthalimabebe/Desktop/react-todo/client/src/pages/DashboardPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../components/Dashboard/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DashboardPage = ({\n  user,\n  setAuthentication\n}) => {\n  _s();\n\n  useEffect(() => {\n    const url = 'https:localhost:5000';\n    const token = localStorage.getItem(\"token\");\n\n    if (token && token != \"\" && token != undefined) {\n      console.log(token);\n      fetch(url + \"/\", {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': token\n        }\n      }).then(res => {\n        if (res.status === 200) return res.json();\n      }).then(data => {\n        setAuthentication(true);\n        user = data.user;\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      name: user.name,\n      setAuthentication: setAuthentication\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DashboardPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = DashboardPage;\nexport default DashboardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"sources":["/Users/nephthalimabebe/Desktop/react-todo/client/src/pages/DashboardPage.js"],"names":["React","useState","useEffect","Navbar","DashboardPage","user","setAuthentication","url","token","localStorage","getItem","undefined","console","log","fetch","method","headers","then","res","status","json","data","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAD,KAA8B;AAAA;;AAChDJ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMK,GAAG,GAAG,sBAAZ;AACA,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAIF,KAAK,IAAIA,KAAK,IAAI,EAAlB,IAAwBA,KAAK,IAAIG,SAArC,EAAgD;AAC9CC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAM,MAAAA,KAAK,CACHP,GAAG,GAAG,GADH,EAEH;AACEQ,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,2BAAiBR;AAFV;AAFX,OAFG,CAAL,CAUES,IAVF,CAUQC,GAAD,IAAS;AACd,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB,OAAOD,GAAG,CAACE,IAAJ,EAAP;AAEzB,OAbD,EAaGH,IAbH,CAaSI,IAAD,IAAU;AAChBf,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAD,QAAAA,IAAI,GAAGgB,IAAI,CAAChB,IAAZ;AACD,OAhBD;AAkBD;AACF,GAxBM,EAwBJ,EAxBI,CAAT;AAyBA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEA,IAAI,CAACiB,IAAnB;AAAyB,MAAA,iBAAiB,EAAEhB;AAA5C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CAhCD;;GAAMF,a;;KAAAA,a;AAkCN,eAAeA,aAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Navbar from '../components/Dashboard/Navbar'\n\nconst DashboardPage = ({user,setAuthentication}) => {\n    useEffect(() => {\n        const url = 'https:localhost:5000'\n        const token = localStorage.getItem(\"token\")\n        if (token && token != \"\" && token != undefined) {\n          console.log(token)\n          fetch(\n            url + \"/\",\n            {\n              method: 'get',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': token\n              }\n            }\n    \n          ).then((res) => {\n            if (res.status === 200) return res.json();\n    \n          }).then((data) => {\n            setAuthentication(true);\n            user = data.user;\n          })\n    \n        }\n      }, [])\n    return (\n        <>\n            <Navbar name={user.name} setAuthentication={setAuthentication}/>\n            <h1>Dashboard</h1>\n        </>\n    )\n}\n\nexport default DashboardPage\n"]},"metadata":{},"sourceType":"module"}