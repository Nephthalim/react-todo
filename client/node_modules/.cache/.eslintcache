[{"/Users/nephthalimabebe/Desktop/react-todo/client/src/index.js":"1","/Users/nephthalimabebe/Desktop/react-todo/client/src/App.js":"2","/Users/nephthalimabebe/Desktop/react-todo/client/src/pages/LandingPage.js":"3","/Users/nephthalimabebe/Desktop/react-todo/client/src/pages/RegisterPage.js":"4","/Users/nephthalimabebe/Desktop/react-todo/client/src/pages/DashboardPage.js":"5","/Users/nephthalimabebe/Desktop/react-todo/client/src/components/LandingPage/LoginForm.js":"6","/Users/nephthalimabebe/Desktop/react-todo/client/src/components/RegisterForm/RegisterForm.js":"7","/Users/nephthalimabebe/Desktop/react-todo/client/src/components/Dashboard/Navbar.js":"8","/Users/nephthalimabebe/Desktop/react-todo/client/src/components/Dashboard/SearchBar.js":"9","/Users/nephthalimabebe/Desktop/react-todo/client/src/components/Dashboard/TodoList.js":"10","/Users/nephthalimabebe/Desktop/react-todo/client/src/components/Dashboard/Todo.js":"11","/Users/nephthalimabebe/Desktop/react-todo/client/src/components/Dashboard/TodoMenu.js":"12","/Users/nephthalimabebe/Desktop/react-todo/client/src/components/Dashboard/Backdrop.js":"13","/Users/nephthalimabebe/Desktop/react-todo/client/src/components/Dashboard/Modal.js":"14","/Users/nephthalimabebe/Desktop/react-todo/client/src/components/Dashboard/NewTaskButton.js":"15"},{"size":471,"mtime":1627763097792,"results":"16","hashOfConfig":"17"},{"size":1954,"mtime":1627763309535,"results":"18","hashOfConfig":"17"},{"size":2169,"mtime":1627685347422,"results":"19","hashOfConfig":"17"},{"size":1260,"mtime":1627687128978,"results":"20","hashOfConfig":"17"},{"size":3607,"mtime":1627686320461,"results":"21","hashOfConfig":"17"},{"size":1481,"mtime":1627762984151,"results":"22","hashOfConfig":"17"},{"size":1257,"mtime":1627763397667,"results":"23","hashOfConfig":"17"},{"size":586,"mtime":1624764980706,"results":"24","hashOfConfig":"17"},{"size":636,"mtime":1625456772516,"results":"25","hashOfConfig":"17"},{"size":475,"mtime":1625275634699,"results":"26","hashOfConfig":"17"},{"size":3625,"mtime":1627686244174,"results":"27","hashOfConfig":"17"},{"size":302,"mtime":1625461637101,"results":"28","hashOfConfig":"17"},{"size":185,"mtime":1625370803264,"results":"29","hashOfConfig":"17"},{"size":2589,"mtime":1625467518694,"results":"30","hashOfConfig":"17"},{"size":1536,"mtime":1627685469542,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"2cwxjq",{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nephthalimabebe/Desktop/react-todo/client/src/index.js",["70"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","/Users/nephthalimabebe/Desktop/react-todo/client/src/App.js",["71","72","73"],"import { Switch, Route, Redirect } from 'react-router-dom';\nimport LandingPage from './pages/LandingPage';\nimport DashboardPage from './pages/DashboardPage';\nimport RegisterPage from './pages/RegisterPage';\nimport { useState, useEffect } from 'react'\n\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './App.css';\n\nfunction App() {\n  const [isAuthenticated, setAuthentication] = useState(false);\n\n  const token = localStorage.getItem(\"token\")\n  useEffect(() => {\n    if (token && token != \"\" && token != undefined) {\n      setAuthentication(true);\n    }\n  })\n  const toaster = {\n    success: () => toast.success('🎉 You have successfuly logged in.', {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    }),\n    error: (msg) => toast.error(msg, {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    }),\n  }\n\n  return (\n    <>\n      <Switch>\n        <Route path='/' exact>\n          {\n            !isAuthenticated ?\n              <LandingPage setAuthentication={setAuthentication} toaster={toaster} />\n              : <DashboardPage setAuthentication={setAuthentication} />\n          }\n        </Route>\n        <Route path='/register' exact>\n\n          {!isAuthenticated ?\n            <RegisterPage setAuthentication={setAuthentication} /> :\n            <Redirect to='/' />\n          }\n\n\n        </Route>\n\n      </Switch>\n      <ToastContainer\n        position=\"bottom-right\"\n        autoClose={2500}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </>\n  );\n}\n\nexport default App;\n","/Users/nephthalimabebe/Desktop/react-todo/client/src/pages/LandingPage.js",["74","75","76","77","78"],"import React, { useRef, useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport LoginForm from '../components/LandingPage/LoginForm'\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst LandingPage = ({ setAuthentication, toaster }) => {\n    const url = \"https://nephthalim-react-todo.herokuapp.com\"\n\n    const loginUser = (user) => {\n        fetch(\n            url + \"/auth/login\",\n            {\n                method: 'POST',\n                body: user,\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                }\n            }\n\n        ).then((res) => {\n            if (res.status === 200) { return res.json(); }\n            else if (res.status === 401) { toaster.error(\"🙁 Please make sure you are using the right credentials!\"); }\n            else if (res.status === 500) { toaster.error(\"🙁 Seems like there is a server error ☹️! Try again some other time\"); }\n        }).then((data) => {\n            if (data.token) {\n                console.log(data.token)\n                localStorage.setItem(\"token\", data.token)\n                console.log(\"================\")\n                console.log(\"Set token\")\n                console.log(\"================\")\n                toaster.success();\n                setAuthentication(true);\n                console.log(\"Set Authentication to true\")\n            }\n\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n    useEffect(() => {\n        console.log(\"LandingPage.js\")\n    }, [])\n    return (\n        <>\n            <h1 className=\"text-center my-5\">Login</h1>\n            <LoginForm loginUser={loginUser} />\n            {/* <ToastContainer\n                position=\"bottom-right\"\n                autoClose={2500}\n                hideProgressBar={false}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss\n                draggable\n                pauseOnHover\n            /> */}\n        </>\n    )\n}\n\nexport default LandingPage\n","/Users/nephthalimabebe/Desktop/react-todo/client/src/pages/RegisterPage.js",[],"/Users/nephthalimabebe/Desktop/react-todo/client/src/pages/DashboardPage.js",["79","80"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport Navbar from '../components/Dashboard/Navbar'\nimport NewTaskButton from '../components/Dashboard/NewTaskButton'\nimport TodoList from '../components/Dashboard/TodoList'\n\nconst DashboardPage = ({ setAuthentication }) => {\n\n    const [todoList, setTodoList] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [user, setUser] = useState({ name: \"\" });\n    const token = localStorage.getItem(\"token\")\n    const url = \"https://nephthalim-react-todo.herokuapp.com\"\n\n    const getUser = () => {\n        fetch(\n            url + \"/todo\",\n            {\n                method: 'GET',\n                headers: {\n                    'token': token,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                }\n            }\n\n        ).then((res) => {\n            if (res.status === 200) return res.json();\n            else if (res.status === 403) {\n                localStorage.removeItem('token')\n                setAuthentication(false)\n            }\n        }).then((data) => {\n            setUser({ name: data.name })\n\n        }).catch((err) => {\n            console.log(\"Here 1\")\n            console.log(err)\n            localStorage.removeItem('token')\n            setAuthentication(false)\n        })\n    }\n    const getTodoList = () => {\n        fetch(\n            url + \"/todo/all\",\n            {\n                method: 'GET',\n                headers: {\n                    'token': token,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                }\n            }\n        ).then((res) => {\n            return res.json();\n        }).then((data) => {\n            setTodoList(data.todos)\n        }).catch((err) => {\n            console.log(\"Here 2\")\n            console.log(err)\n            localStorage.removeItem('token')\n            setAuthentication(false)\n        })\n\n    }\n\n    const searchTask = (searchQuery) => {\n        console.log(`Searching ${searchQuery}`)\n        fetch(\n            url + '/search?query=' + searchQuery.query,\n            {\n                method: \"GET\",\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    \"token\": token\n                }\n            }).then((res) => {\n                return res.json()\n            }).then((data) => {\n                setTodoList(data.searchResult)\n            }).catch((err) => {\n                localStorage.removeItem('token')\n                setAuthentication(false)\n            })\n    }\n\n    const deleteTodo = (id) => {\n        setTodoList(todoList.filter(todo => todo.id !== id))\n    }\n\n    useEffect(() => {\n        console.log(\"DahsboardPage.js\")\n        setIsLoading(true);\n        getUser();\n        getTodoList();\n        setIsLoading(false);\n    }, [])\n    if (isLoading) {\n        return (\n            <section>\n                <p>Loading...</p>\n            </section>\n        );\n    }\n    else {\n        return (\n            <>\n                <Navbar name={user.name} setAuthentication={setAuthentication} searchTask={searchTask} />\n                {/* <Navbar name={\"Nephy\"} setAuthentication={setAuthentication} searchTask={searchTask} /> */}\n                <TodoList todos={todoList} deleteTodo={deleteTodo} />\n                <NewTaskButton setTodos={setTodoList} todos={todoList}/>\n\n\n            </>\n        )\n\n    }\n}\n\nexport default DashboardPage\n","/Users/nephthalimabebe/Desktop/react-todo/client/src/components/LandingPage/LoginForm.js",["81","82","83"],"import React, { useRef, useState } from 'react'\nimport { useHistory } from 'react-router';\nimport { Link, Redirect } from 'react-router-dom';\n\n\nconst LoginForm = ({ loginUser }) => {\n    const [errorMessage, setErrorMessage] = useState(\"\")\n    const history = useHistory();\n    const emailInputRef = useRef();\n    const passwordInputRef = useRef();\n\n    const loginUserHandler = (e) => {\n        e.preventDefault();\n        const enteredEmail = emailInputRef.current.value\n        const enteredPassword = passwordInputRef.current.value\n\n        const entered = {\n            \"email\": enteredEmail,\n            \"password\": enteredPassword\n        }\n        const user = JSON.stringify(entered)\n        loginUser(user, setErrorMessage);\n\n    }\n\n    const toRegister = () => {\n        history.push('/register')\n    }\n\n\n    return (\n        <div>\n            <form className=\"w-50 mx-auto\">\n\n                <input ref={emailInputRef} type=\"email\" className=\"form-control my-3\" name=\"email\" placeholder=\"Email\" />\n                <input ref={passwordInputRef} type=\"password\" className=\"form-control my-3\" name=\"password\" placeholder=\"Password\" />\n                <input type=\"submit\" className=\"btn btn-primary w-100 my-3\" onClick={loginUserHandler} />\n                <Link to=\"/register\">\n                    <button type=\"button\" className=\"btn btn-success w-100 my-3\">Register</button>\n                </Link>\n\n            </form>\n        </div>\n    )\n}\n\nexport default LoginForm\n","/Users/nephthalimabebe/Desktop/react-todo/client/src/components/RegisterForm/RegisterForm.js",[],"/Users/nephthalimabebe/Desktop/react-todo/client/src/components/Dashboard/Navbar.js",[],"/Users/nephthalimabebe/Desktop/react-todo/client/src/components/Dashboard/SearchBar.js",[],"/Users/nephthalimabebe/Desktop/react-todo/client/src/components/Dashboard/TodoList.js",["84","85"],"import React, { useState, useEffect } from 'react'\nimport Todo from './Todo'\nimport './TodoList.css'\n\nconst TodoList = ({ todos, deleteTodo }) => {\n\n    return (\n        <>\n            <div className=\"grid\">\n                {todos.map((element) => {\n                    return (\n                        <Todo key={element.id} task={element} deleteTodo={deleteTodo} />\n                    )\n                })}\n\n            </div>\n        </>\n    )\n}\n\nexport default TodoList\n","/Users/nephthalimabebe/Desktop/react-todo/client/src/components/Dashboard/Todo.js",["86"],"import React, { useState, useEffect } from 'react'\nimport { AiFillCaretUp, AiFillCaretDown } from \"react-icons/ai\";\nimport './Todo.css'\nimport TodoMenu from './TodoMenu';\nimport Backdrop from './Backdrop';\nimport Modal from './Modal';\n\nconst Todo = ({ key, task, deleteTodo }) => {\n    const url =\"https://nephthalim-react-todo.herokuapp.com\"\n    const token = localStorage.getItem('token');\n    const [important, switchImportant] = useState(false);\n    const [_task, setTask] = useState(false);\n    const [active, setActive] = useState(false);\n    const [showEditModal, setShowEditModal] = useState(false);\n    \n\n    function showEditModalHandler() {\n        setShowEditModal(true);\n    }\n\n\n    function closeModalHandler() {\n        setShowEditModal(false);\n    }\n\n\n    const markImportant = (id) => {\n        const token = localStorage.getItem(\"token\")\n\n        fetch(\n            url + \"/todo/important/\" + id,\n            {\n                method: 'PUT',\n                headers: {\n                    'token': token,\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                }\n            }\n\n        ).then((res) => {\n            if (res.status === 200) return res.json();\n            else if (res.status === 403) localStorage.removeItem('token')\n\n        }).then(() => {\n            switchImportant(!important)\n\n        })\n    }\n\n    const rotateCaret = () => {\n        setActive(!active)\n    }\n\n    const _delete = (e) => {\n        e.preventDefault();\n\n        fetch(\n            url + \"/todo/\" + _task.id,\n            {\n                method: 'DELETE',\n                headers: {\n                    'token': token,\n                }\n            }\n\n        ).then((res) => {\n            if (res.status === 200) return res.json();\n            else if (res.status === 403) localStorage.removeItem('token')\n\n        }).then(() => {\n            deleteTodo(_task.id);\n        })\n    }\n\n    useEffect(() => {\n        switchImportant(task.important);\n        setTask(task);\n    }, [])\n\n    const editTodo = (newInfo) => {\n\n        fetch(\n            url + \"/todo/\" + _task.id,\n            {\n                method: 'PUT',\n                body: JSON.stringify(newInfo),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'token': token,\n                }\n            }\n\n        ).then((res) => {\n            if (res.status === 200) return res.json();\n            else if (res.status === 403) localStorage.removeItem('token')\n\n        }).then(setTask({ id: _task.id, ...newInfo, important: _task.important, date_created: _task.date_created }))\n    }\n\n    return (\n\n        <div className={`container ${important ? \"important\" : null}`} onDoubleClick={() => { if (!showEditModal) markImportant(_task.id) }}>\n            <div className=\"header\">\n                <h3>{_task.name}</h3>\n                <div onClick={rotateCaret}>{active ? <AiFillCaretDown /> : <AiFillCaretUp />}</div>\n\n            </div>\n            <div>\n                {active ?\n                    <TodoMenu deleteTodo={_delete} showModalHandler={showEditModalHandler} /> : null\n                }\n            </div>\n            <p className=\"description\">{_task.description}</p>\n            <div className=\"date\">{_task.date_created}</div>\n            {(showEditModal) && <Backdrop onClick={closeModalHandler} />}\n            {showEditModal && <Modal text={'Edit'} onClose={closeModalHandler} data={_task} onConfirm={editTodo} />}\n            \n        </div >\n\n    )\n}\n\nexport default Todo\n","/Users/nephthalimabebe/Desktop/react-todo/client/src/components/Dashboard/TodoMenu.js",["87","88"],"import React from 'react'\nimport './TodoMenu.css'\n\nconst TodoMenu = ({showModalHandler, deleteTodo}) => {\n    \n    return (\n        <div className=\"popup\">\n            <a onClick={showModalHandler}>Edit</a>\n            <a onClick={deleteTodo}>Delete</a>\n        </div>\n    )\n}\n\nexport default TodoMenu\n","/Users/nephthalimabebe/Desktop/react-todo/client/src/components/Dashboard/Backdrop.js",[],"/Users/nephthalimabebe/Desktop/react-todo/client/src/components/Dashboard/Modal.js",[],"/Users/nephthalimabebe/Desktop/react-todo/client/src/components/Dashboard/NewTaskButton.js",[],{"ruleId":"89","severity":1,"message":"90","line":4,"column":25,"nodeType":"91","messageId":"92","endLine":4,"endColumn":35},{"ruleId":"93","severity":1,"message":"94","line":17,"column":3,"nodeType":"91","endLine":17,"endColumn":12,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":18,"column":24,"nodeType":"98","messageId":"99","endLine":18,"endColumn":26},{"ruleId":"96","severity":1,"message":"97","line":18,"column":39,"nodeType":"98","messageId":"99","endLine":18,"endColumn":41},{"ruleId":"89","severity":1,"message":"100","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":23},{"ruleId":"89","severity":1,"message":"101","line":1,"column":25,"nodeType":"91","messageId":"92","endLine":1,"endColumn":33},{"ruleId":"89","severity":1,"message":"102","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":20},{"ruleId":"89","severity":1,"message":"103","line":5,"column":10,"nodeType":"91","messageId":"92","endLine":5,"endColumn":24},{"ruleId":"89","severity":1,"message":"104","line":5,"column":26,"nodeType":"91","messageId":"92","endLine":5,"endColumn":31},{"ruleId":"89","severity":1,"message":"102","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":20},{"ruleId":"93","severity":1,"message":"105","line":100,"column":8,"nodeType":"106","endLine":100,"endColumn":10,"suggestions":"107"},{"ruleId":"89","severity":1,"message":"108","line":3,"column":16,"nodeType":"91","messageId":"92","endLine":3,"endColumn":24},{"ruleId":"89","severity":1,"message":"109","line":7,"column":12,"nodeType":"91","messageId":"92","endLine":7,"endColumn":24},{"ruleId":"89","severity":1,"message":"110","line":26,"column":11,"nodeType":"91","messageId":"92","endLine":26,"endColumn":21},{"ruleId":"89","severity":1,"message":"101","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"111","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"93","severity":1,"message":"112","line":79,"column":8,"nodeType":"106","endLine":79,"endColumn":10,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":8,"column":13,"nodeType":"116","endLine":8,"endColumn":43},{"ruleId":"114","severity":1,"message":"115","line":9,"column":13,"nodeType":"116","endLine":9,"endColumn":37},"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setAuthentication'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [token] as a second argument to the useEffect Hook.",["117"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","React Hook useEffect has missing dependencies: 'getTodoList' and 'getUser'. Either include them or remove the dependency array.","ArrayExpression",["118"],"'Redirect' is defined but never used.","'errorMessage' is assigned a value but never used.","'toRegister' is assigned a value but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'task'. Either include it or remove the dependency array. If 'setTask' needs the current value of 'task', you can also switch to useReducer instead of useState and read 'task' in the reducer.",["119"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Add dependencies array: [token]",{"range":"126","text":"127"},"Update the dependencies array to be: [getTodoList, getUser]",{"range":"128","text":"129"},"Update the dependencies array to be: [task]",{"range":"130","text":"131"},[621,621],", [token]",[2998,3000],"[getTodoList, getUser]",[2048,2050],"[task]"]