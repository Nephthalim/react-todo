{"ast":null,"code":"var _jsxFileName = \"/Users/nephthalimabebe/Desktop/react-todo/client/src/pages/DashboardPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../components/Dashboard/Navbar';\nimport TodoList from '../components/Dashboard/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DashboardPage = ({\n  setAuthentication\n}) => {\n  _s();\n\n  const [searchResult, setSearchResult] = useState([]); //     const token = localStorage.getItem(\"token\")\n  //     const url = \"http://localhost:5000\"\n  // const searchTask = (searchQuery) => {\n  //     fetch(\n  //         url + '/todo/search/',\n  //         {\n  //             method: \"GET\",\n  //             body: searchQuery,\n  //             headers:\n  //             {\n  //                 'Content-Type': \"application/json\",\n  //                 \"token\": token\n  //             }\n  //         }).then((res) => { \n  //             if (res.status === 200) return res.json() \n  //         }).then((data)=>{\n  //             setSearchResult(data)\n  //         })\n  // }\n\n  const dummy_task = [{\n    name: 'Clean',\n    description: 'I need to clean my house',\n    date_created: '2021-07-24'\n  }, {\n    name: 'Run',\n    description: 'I need to go for a run',\n    date_created: '2021-07-24'\n  }, {\n    name: 'Clean',\n    description: 'I need to clean my house',\n    date_created: '2021-07-24'\n  }, {\n    name: 'Run',\n    description: 'I need to go for a run',\n    date_created: '2021-07-24'\n  }, {\n    name: 'Clean',\n    description: 'I need to clean my house',\n    date_created: '2021-07-24'\n  }, {\n    name: 'Run',\n    description: 'I need to go for a run',\n    date_created: '2021-07-24'\n  }, {\n    name: 'Clean',\n    description: 'I need to clean my house',\n    date_created: '2021-07-24'\n  }, {\n    name: 'Run',\n    description: 'I need to go for a run',\n    date_created: '2021-07-24'\n  }, {\n    name: 'Clean',\n    description: 'I need to clean my house',\n    date_created: '2021-07-24'\n  }, {\n    name: 'Run',\n    description: 'I need to go for a run',\n    date_created: '2021-07-24'\n  }]; // const [isLoading, setIsLoading] = useState(true);\n  // const [user, setUser] = useState({ name: \"\", email: \"\" });\n  // useEffect(() => {\n  //     setIsLoading(true);\n  //     if (token && token != \"\" && token != undefined) {\n  //         console.log(token)\n  //         fetch(\n  //             url + \"/\",\n  //             {\n  //                 method: 'get',\n  //                 headers: {\n  //                     // 'Content-Type': 'application/json',\n  //                     'token': token,\n  //                     // 'Authorization': {'token': token}\n  //                 }\n  //             }\n  //         ).then((res) => {\n  //             if (res.status === 200) return res.json();\n  //         }).then((data) => {\n  //             setUser({name: data.name, email: data.email})\n  //             setIsLoading(false);\n  //         })\n  //     }\n  // }, [])\n  // if (isLoading) {\n  //     return (\n  //         <section>\n  //             <p>Loading...</p>\n  //         </section>\n  //     );\n  // }\n  // else {\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      name: \"Nephy\",\n      setAuthentication: setAuthentication,\n      searchTask: searchTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: dummy_task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true); // }\n};\n\n_s(DashboardPage, \"DyUkxLBQhxCzCBZ6lD2G5eTIM7g=\");\n\n_c = DashboardPage;\nexport default DashboardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"sources":["/Users/nephthalimabebe/Desktop/react-todo/client/src/pages/DashboardPage.js"],"names":["React","useState","useEffect","Navbar","TodoList","DashboardPage","setAuthentication","searchResult","setSearchResult","dummy_task","name","description","date_created","searchTask"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,QAAP,MAAqB,kCAArB;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2B;AAAA;;AAE7C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD,CAF6C,CAI7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMQ,UAAU,GAAG,CACf;AACIC,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,WAAW,EAAE,0BAFjB;AAGIC,IAAAA,YAAY,EAAE;AAHlB,GADe,EAMf;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,WAAW,EAAE,wBAFjB;AAGIC,IAAAA,YAAY,EAAE;AAHlB,GANe,EAWf;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,WAAW,EAAE,0BAFjB;AAGIC,IAAAA,YAAY,EAAE;AAHlB,GAXe,EAgBf;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,WAAW,EAAE,wBAFjB;AAGIC,IAAAA,YAAY,EAAE;AAHlB,GAhBe,EAqBf;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,WAAW,EAAE,0BAFjB;AAGIC,IAAAA,YAAY,EAAE;AAHlB,GArBe,EA0Bf;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,WAAW,EAAE,wBAFjB;AAGIC,IAAAA,YAAY,EAAE;AAHlB,GA1Be,EA+Bf;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,WAAW,EAAE,0BAFjB;AAGIC,IAAAA,YAAY,EAAE;AAHlB,GA/Be,EAoCf;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,WAAW,EAAE,wBAFjB;AAGIC,IAAAA,YAAY,EAAE;AAHlB,GApCe,EAyCf;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,WAAW,EAAE,0BAFjB;AAGIC,IAAAA,YAAY,EAAE;AAHlB,GAzCe,EA8Cf;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,WAAW,EAAE,wBAFjB;AAGIC,IAAAA,YAAY,EAAE;AAHlB,GA9Ce,CAAnB,CAxB6C,CA6E7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACI;AAAA,4BAEI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,OAAd;AAAuB,MAAA,iBAAiB,EAAEN,iBAA1C;AAA6D,MAAA,UAAU,EAAEO;AAAzE;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEJ;AAAjB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ,CAlH6C,CA0H7C;AACH,CA3HD;;GAAMJ,a;;KAAAA,a;AA6HN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Navbar from '../components/Dashboard/Navbar'\nimport TodoList from '../components/Dashboard/TodoList'\n\nconst DashboardPage = ({ setAuthentication }) => {\n\n    const [searchResult, setSearchResult] = useState([]);\n\n    //     const token = localStorage.getItem(\"token\")\n    //     const url = \"http://localhost:5000\"\n    // const searchTask = (searchQuery) => {\n    //     fetch(\n    //         url + '/todo/search/',\n    //         {\n    //             method: \"GET\",\n    //             body: searchQuery,\n    //             headers:\n    //             {\n    //                 'Content-Type': \"application/json\",\n    //                 \"token\": token\n    //             }\n    //         }).then((res) => { \n    //             if (res.status === 200) return res.json() \n    //         }).then((data)=>{\n    //             setSearchResult(data)\n    //         })\n    // }\n\n    const dummy_task = [\n        {\n            name: 'Clean',\n            description: 'I need to clean my house',\n            date_created: '2021-07-24'\n        },\n        {\n            name: 'Run',\n            description: 'I need to go for a run',\n            date_created: '2021-07-24'\n        },\n        {\n            name: 'Clean',\n            description: 'I need to clean my house',\n            date_created: '2021-07-24'\n        },\n        {\n            name: 'Run',\n            description: 'I need to go for a run',\n            date_created: '2021-07-24'\n        },\n        {\n            name: 'Clean',\n            description: 'I need to clean my house',\n            date_created: '2021-07-24'\n        },\n        {\n            name: 'Run',\n            description: 'I need to go for a run',\n            date_created: '2021-07-24'\n        },\n        {\n            name: 'Clean',\n            description: 'I need to clean my house',\n            date_created: '2021-07-24'\n        },\n        {\n            name: 'Run',\n            description: 'I need to go for a run',\n            date_created: '2021-07-24'\n        },\n        {\n            name: 'Clean',\n            description: 'I need to clean my house',\n            date_created: '2021-07-24'\n        },\n        {\n            name: 'Run',\n            description: 'I need to go for a run',\n            date_created: '2021-07-24'\n        },\n    ]\n\n    // const [isLoading, setIsLoading] = useState(true);\n    // const [user, setUser] = useState({ name: \"\", email: \"\" });\n    // useEffect(() => {\n    //     setIsLoading(true);\n    //     if (token && token != \"\" && token != undefined) {\n    //         console.log(token)\n    //         fetch(\n    //             url + \"/\",\n    //             {\n    //                 method: 'get',\n    //                 headers: {\n    //                     // 'Content-Type': 'application/json',\n    //                     'token': token,\n    //                     // 'Authorization': {'token': token}\n    //                 }\n    //             }\n\n    //         ).then((res) => {\n    //             if (res.status === 200) return res.json();\n\n    //         }).then((data) => {\n\n    //             setUser({name: data.name, email: data.email})\n    //             setIsLoading(false);\n\n    //         })\n\n    //     }\n    // }, [])\n    // if (isLoading) {\n    //     return (\n    //         <section>\n    //             <p>Loading...</p>\n    //         </section>\n    //     );\n    // }\n    // else {\n    return (\n        <>\n            {/* <Navbar name={user.name} setAuthentication={setAuthentication} /> */}\n            <Navbar name={\"Nephy\"} setAuthentication={setAuthentication} searchTask={searchTask} />\n            <TodoList todos={dummy_task} />\n\n        </>\n    )\n    // }\n}\n\nexport default DashboardPage\n"]},"metadata":{},"sourceType":"module"}