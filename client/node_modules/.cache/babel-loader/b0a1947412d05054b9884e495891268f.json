{"ast":null,"code":"var _jsxFileName = \"/Users/nephthalimabebe/Desktop/react-todo/client/src/pages/DashboardPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../components/Dashboard/Navbar';\nimport TodoList from '../components/Dashboard/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DashboardPage = ({\n  setAuthentication\n}) => {\n  _s();\n\n  const [searchResult, setSearchResult] = useState([]);\n  const token = localStorage.getItem(\"token\");\n  const url = \"http://localhost:5000\"; // const searchTask = (searchQuery) => {\n  //     fetch(\n  //         url + '/todo/search/',\n  //         {\n  //             method: \"GET\",\n  //             body: searchQuery,\n  //             headers:\n  //             {\n  //                 'Content-Type': \"application/json\",\n  //                 \"token\": token\n  //             }\n  //         }).then((res) => {\n  //             if (res.status === 200) return res.json()\n  //         }).then((data) => {\n  //             setSearchResult(data)\n  //         })\n  // }\n\n  const dummy_task = [{\n    name: 'Clean',\n    description: 'I need to clean my house',\n    date_created: '2021-07-24'\n  }, {\n    name: 'Run',\n    description: 'I need to go for a run',\n    date_created: '2021-07-24'\n  }, {\n    name: 'Clean',\n    description: 'I need to clean my house',\n    date_created: '2021-07-24'\n  }, {\n    name: 'Run',\n    description: 'I need to go for a run',\n    date_created: '2021-07-24'\n  }, {\n    name: 'Clean',\n    description: 'I need to clean my house',\n    date_created: '2021-07-24'\n  }, {\n    name: 'Run',\n    description: 'I need to go for a run',\n    date_created: '2021-07-24'\n  }, {\n    name: 'Clean',\n    description: 'I need to clean my house',\n    date_created: '2021-07-24'\n  }, {\n    name: 'Run',\n    description: 'I need to go for a run',\n    date_created: '2021-07-24'\n  }, {\n    name: 'Clean',\n    description: 'I need to clean my house',\n    date_created: '2021-07-24'\n  }, {\n    name: 'Run',\n    description: 'I need to go for a run',\n    date_created: '2021-07-24'\n  }];\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\"\n  });\n  useEffect(() => {\n    setIsLoading(true);\n\n    if (token && token != \"\" && token != undefined) {\n      console.log(token);\n      fetch(url + \"/\", {\n        method: 'get',\n        headers: {\n          // 'Content-Type': 'application/json',\n          'token': token // 'Authorization': {'token': token}\n\n        }\n      }).then(res => {\n        if (res.status === 200) return res.json();\n      }).then(data => {\n        setUser({\n          name: data.name,\n          email: data.email\n        });\n        setIsLoading(false);\n      });\n    }\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        name: user.name,\n        setAuthentication: setAuthentication\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n        name: \"Nephy\",\n        setAuthentication: setAuthentication,\n        searchTask: searchTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: dummy_task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(DashboardPage, \"jJvWdPbLx3uib1GT4f4lVygFFRc=\");\n\n_c = DashboardPage;\nexport default DashboardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"sources":["/Users/nephthalimabebe/Desktop/react-todo/client/src/pages/DashboardPage.js"],"names":["React","useState","useEffect","Navbar","TodoList","DashboardPage","setAuthentication","searchResult","setSearchResult","token","localStorage","getItem","url","dummy_task","name","description","date_created","isLoading","setIsLoading","user","setUser","email","undefined","console","log","fetch","method","headers","then","res","status","json","data","searchTask"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Navbar from '../components/Dashboard/Navbar'\nimport TodoList from '../components/Dashboard/TodoList'\n\nconst DashboardPage = ({ setAuthentication }) => {\n\n    const [searchResult, setSearchResult] = useState([]);\n\n    const token = localStorage.getItem(\"token\")\n    const url = \"http://localhost:5000\"\n    // const searchTask = (searchQuery) => {\n    //     fetch(\n    //         url + '/todo/search/',\n    //         {\n    //             method: \"GET\",\n    //             body: searchQuery,\n    //             headers:\n    //             {\n    //                 'Content-Type': \"application/json\",\n    //                 \"token\": token\n    //             }\n    //         }).then((res) => {\n    //             if (res.status === 200) return res.json()\n    //         }).then((data) => {\n    //             setSearchResult(data)\n    //         })\n    // }\n\n    const dummy_task = [\n        {\n            name: 'Clean',\n            description: 'I need to clean my house',\n            date_created: '2021-07-24'\n        },\n        {\n            name: 'Run',\n            description: 'I need to go for a run',\n            date_created: '2021-07-24'\n        },\n        {\n            name: 'Clean',\n            description: 'I need to clean my house',\n            date_created: '2021-07-24'\n        },\n        {\n            name: 'Run',\n            description: 'I need to go for a run',\n            date_created: '2021-07-24'\n        },\n        {\n            name: 'Clean',\n            description: 'I need to clean my house',\n            date_created: '2021-07-24'\n        },\n        {\n            name: 'Run',\n            description: 'I need to go for a run',\n            date_created: '2021-07-24'\n        },\n        {\n            name: 'Clean',\n            description: 'I need to clean my house',\n            date_created: '2021-07-24'\n        },\n        {\n            name: 'Run',\n            description: 'I need to go for a run',\n            date_created: '2021-07-24'\n        },\n        {\n            name: 'Clean',\n            description: 'I need to clean my house',\n            date_created: '2021-07-24'\n        },\n        {\n            name: 'Run',\n            description: 'I need to go for a run',\n            date_created: '2021-07-24'\n        },\n    ]\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [user, setUser] = useState({ name: \"\", email: \"\" });\n    useEffect(() => {\n        setIsLoading(true);\n        if (token && token != \"\" && token != undefined) {\n            console.log(token)\n            fetch(\n                url + \"/\",\n                {\n                    method: 'get',\n                    headers: {\n                        // 'Content-Type': 'application/json',\n                        'token': token,\n                        // 'Authorization': {'token': token}\n                    }\n                }\n\n            ).then((res) => {\n                if (res.status === 200) return res.json();\n\n            }).then((data) => {\n\n                setUser({name: data.name, email: data.email})\n                setIsLoading(false);\n\n            })\n\n        }\n    }, [])\n    if (isLoading) {\n        return (\n            <section>\n                <p>Loading...</p>\n            </section>\n        );\n    }\n    else {\n    return (\n        <>\n            <Navbar name={user.name} setAuthentication={setAuthentication} />\n            <Navbar name={\"Nephy\"} setAuthentication={setAuthentication} searchTask={searchTask} />\n            <TodoList todos={dummy_task} />\n\n        </>\n    )\n    }\n}\n\nexport default DashboardPage\n"]},"metadata":{},"sourceType":"module"}