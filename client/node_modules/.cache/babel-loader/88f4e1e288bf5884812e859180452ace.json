{"ast":null,"code":"var _jsxFileName = \"/Users/nephthalimabebe/Desktop/react-todo/client/src/pages/DashboardPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Navbar from '../components/Dashboard/Navbar';\nimport NewTaskButton from '../components/Dashboard/NewTaskButton';\nimport TodoList from '../components/Dashboard/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DashboardPage = ({\n  setAuthentication\n}) => {\n  _s();\n\n  const [todoList, setTodoList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState({\n    name: \"\"\n  });\n  const token = localStorage.getItem(\"token\");\n  const url = \"https://nephthalim-react-todo.herokuapp.com\";\n\n  const getUser = () => {\n    fetch(url + \"/todo\", {\n      method: 'GET',\n      headers: {\n        'token': token,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(res => {\n      if (res.status === 200) return res.json();else if (res.status === 403) {\n        localStorage.removeItem('token');\n        setAuthentication(false);\n      }\n    }).then(data => {\n      setUser({\n        name: data.name\n      });\n    }).catch(err => {\n      console.log(\"Here 1\");\n      console.log(err);\n      localStorage.removeItem('token');\n      setAuthentication(false);\n    });\n  };\n\n  const getTodoList = () => {\n    fetch(url + \"/todo/all\", {\n      method: 'GET',\n      headers: {\n        'token': token,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      setTodoList(data.todos);\n    }).catch(err => {\n      console.log(\"Here 2\");\n      console.log(err);\n      localStorage.removeItem('token');\n      setAuthentication(false);\n    });\n  };\n\n  const searchTask = searchQuery => {\n    console.log(`Searching ${searchQuery}`);\n    fetch(url + '/search?query=' + searchQuery.query, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        \"token\": token\n      }\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      setTodoList(data.searchResult);\n    }).catch(err => {\n      localStorage.removeItem('token');\n      setAuthentication(false);\n    });\n  };\n\n  const deleteTodo = id => {\n    setTodoList(todoList.filter(todo => todo.id !== id));\n  };\n\n  useEffect(() => {\n    console.log(\"DahsboardPage.js\");\n    setIsLoading(true);\n    getUser();\n    getTodoList();\n    setIsLoading(false);\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        name: user.name,\n        setAuthentication: setAuthentication,\n        searchTask: searchTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todoList,\n        deleteTodo: deleteTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NewTaskButton, {\n        setTodos: setTodoList,\n        todos: todoList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(DashboardPage, \"3YDcl5P8PS3vPkijqKOkT9Xo0Ss=\");\n\n_c = DashboardPage;\nexport default DashboardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"sources":["/Users/nephthalimabebe/Desktop/react-todo/client/src/pages/DashboardPage.js"],"names":["React","useState","useEffect","useHistory","Navbar","NewTaskButton","TodoList","DashboardPage","setAuthentication","todoList","setTodoList","isLoading","setIsLoading","user","setUser","name","token","localStorage","getItem","url","getUser","fetch","method","headers","then","res","status","json","removeItem","data","catch","err","console","log","getTodoList","todos","searchTask","searchQuery","query","searchResult","deleteTodo","id","filter","todo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,QAAP,MAAqB,kCAArB;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2B;AAAA;;AAE7C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC;AAAEc,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAhC;AACA,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAMC,GAAG,GAAG,6CAAZ;;AAEA,QAAMC,OAAO,GAAG,MAAM;AAClBC,IAAAA,KAAK,CACDF,GAAG,GAAG,OADL,EAED;AACIG,MAAAA,MAAM,EAAE,KADZ;AAEIC,MAAAA,OAAO,EAAE;AACL,iBAASP,KADJ;AAEL,wBAAgB,kBAFX;AAGL,kBAAU;AAHL;AAFb,KAFC,CAAL,CAWEQ,IAXF,CAWQC,GAAD,IAAS;AACZ,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB,OAAOD,GAAG,CAACE,IAAJ,EAAP,CAAxB,KACK,IAAIF,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACzBT,QAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACApB,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH;AACJ,KAjBD,EAiBGgB,IAjBH,CAiBSK,IAAD,IAAU;AACdf,MAAAA,OAAO,CAAC;AAAEC,QAAAA,IAAI,EAAEc,IAAI,CAACd;AAAb,OAAD,CAAP;AAEH,KApBD,EAoBGe,KApBH,CAoBUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAd,MAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACApB,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,KAzBD;AA0BH,GA3BD;;AA4BA,QAAM0B,WAAW,GAAG,MAAM;AACtBb,IAAAA,KAAK,CACDF,GAAG,GAAG,WADL,EAED;AACIG,MAAAA,MAAM,EAAE,KADZ;AAEIC,MAAAA,OAAO,EAAE;AACL,iBAASP,KADJ;AAEL,wBAAgB,kBAFX;AAGL,kBAAU;AAHL;AAFb,KAFC,CAAL,CAUEQ,IAVF,CAUQC,GAAD,IAAS;AACZ,aAAOA,GAAG,CAACE,IAAJ,EAAP;AACH,KAZD,EAYGH,IAZH,CAYSK,IAAD,IAAU;AACdnB,MAAAA,WAAW,CAACmB,IAAI,CAACM,KAAN,CAAX;AACH,KAdD,EAcGL,KAdH,CAcUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAd,MAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACApB,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,KAnBD;AAqBH,GAtBD;;AAwBA,QAAM4B,UAAU,GAAIC,WAAD,IAAiB;AAChCL,IAAAA,OAAO,CAACC,GAAR,CAAa,aAAYI,WAAY,EAArC;AACAhB,IAAAA,KAAK,CACDF,GAAG,GAAG,gBAAN,GAAyBkB,WAAW,CAACC,KADpC,EAED;AACIhB,MAAAA,MAAM,EAAE,KADZ;AAEIC,MAAAA,OAAO,EACP;AACI,wBAAgB,kBADpB;AAEI,kBAAU,kBAFd;AAGI,iBAASP;AAHb;AAHJ,KAFC,CAAL,CAUOQ,IAVP,CAUaC,GAAD,IAAS;AACb,aAAOA,GAAG,CAACE,IAAJ,EAAP;AACH,KAZL,EAYOH,IAZP,CAYaK,IAAD,IAAU;AACdnB,MAAAA,WAAW,CAACmB,IAAI,CAACU,YAAN,CAAX;AACH,KAdL,EAcOT,KAdP,CAccC,GAAD,IAAS;AACdd,MAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACApB,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,KAjBL;AAkBH,GApBD;;AAsBA,QAAMgC,UAAU,GAAIC,EAAD,IAAQ;AACvB/B,IAAAA,WAAW,CAACD,QAAQ,CAACiC,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAApC,CAAD,CAAX;AACH,GAFD;;AAIAvC,EAAAA,SAAS,CAAC,MAAM;AACZ8B,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACArB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAQ,IAAAA,OAAO;AACPc,IAAAA,WAAW;AACXtB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GANQ,EAMN,EANM,CAAT;;AAOA,MAAID,SAAJ,EAAe;AACX,wBACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND,MAOK;AACD,wBACI;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEE,IAAI,CAACE,IAAnB;AAAyB,QAAA,iBAAiB,EAAEP,iBAA5C;AAA+D,QAAA,UAAU,EAAE4B;AAA3E;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE3B,QAAjB;AAA2B,QAAA,UAAU,EAAE+B;AAAvC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAE9B,WAAzB;AAAsC,QAAA,KAAK,EAAED;AAA7C;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,oBADJ;AAWH;AACJ,CAjHD;;GAAMF,a;;KAAAA,a;AAmHN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport Navbar from '../components/Dashboard/Navbar'\nimport NewTaskButton from '../components/Dashboard/NewTaskButton'\nimport TodoList from '../components/Dashboard/TodoList'\n\nconst DashboardPage = ({ setAuthentication }) => {\n\n    const [todoList, setTodoList] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [user, setUser] = useState({ name: \"\" });\n    const token = localStorage.getItem(\"token\")\n    const url = \"https://nephthalim-react-todo.herokuapp.com\"\n\n    const getUser = () => {\n        fetch(\n            url + \"/todo\",\n            {\n                method: 'GET',\n                headers: {\n                    'token': token,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                }\n            }\n\n        ).then((res) => {\n            if (res.status === 200) return res.json();\n            else if (res.status === 403) {\n                localStorage.removeItem('token')\n                setAuthentication(false)\n            }\n        }).then((data) => {\n            setUser({ name: data.name })\n\n        }).catch((err) => {\n            console.log(\"Here 1\")\n            console.log(err)\n            localStorage.removeItem('token')\n            setAuthentication(false)\n        })\n    }\n    const getTodoList = () => {\n        fetch(\n            url + \"/todo/all\",\n            {\n                method: 'GET',\n                headers: {\n                    'token': token,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                }\n            }\n        ).then((res) => {\n            return res.json();\n        }).then((data) => {\n            setTodoList(data.todos)\n        }).catch((err) => {\n            console.log(\"Here 2\")\n            console.log(err)\n            localStorage.removeItem('token')\n            setAuthentication(false)\n        })\n\n    }\n\n    const searchTask = (searchQuery) => {\n        console.log(`Searching ${searchQuery}`)\n        fetch(\n            url + '/search?query=' + searchQuery.query,\n            {\n                method: \"GET\",\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    \"token\": token\n                }\n            }).then((res) => {\n                return res.json()\n            }).then((data) => {\n                setTodoList(data.searchResult)\n            }).catch((err) => {\n                localStorage.removeItem('token')\n                setAuthentication(false)\n            })\n    }\n\n    const deleteTodo = (id) => {\n        setTodoList(todoList.filter(todo => todo.id !== id))\n    }\n\n    useEffect(() => {\n        console.log(\"DahsboardPage.js\")\n        setIsLoading(true);\n        getUser();\n        getTodoList();\n        setIsLoading(false);\n    }, [])\n    if (isLoading) {\n        return (\n            <section>\n                <p>Loading...</p>\n            </section>\n        );\n    }\n    else {\n        return (\n            <>\n                <Navbar name={user.name} setAuthentication={setAuthentication} searchTask={searchTask} />\n                {/* <Navbar name={\"Nephy\"} setAuthentication={setAuthentication} searchTask={searchTask} /> */}\n                <TodoList todos={todoList} deleteTodo={deleteTodo} />\n                <NewTaskButton setTodos={setTodoList} todos={todoList}/>\n\n\n            </>\n        )\n\n    }\n}\n\nexport default DashboardPage\n"]},"metadata":{},"sourceType":"module"}