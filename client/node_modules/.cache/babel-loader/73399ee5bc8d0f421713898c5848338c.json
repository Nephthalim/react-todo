{"ast":null,"code":"import _toConsumableArray from\"/Users/nephthalimabebe/Desktop/react-todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/nephthalimabebe/Desktop/react-todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{IoAddCircle}from\"react-icons/io5\";import'./NewTaskButton.css';import Modal from'./Modal';import Backdrop from'./Backdrop';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NewTaskButton=function NewTaskButton(_ref){var setTodos=_ref.setTodos,todos=_ref.todos;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showAddModal=_useState2[0],setShowAddModal=_useState2[1];var url=\"http://localhost:5000\";var token=localStorage.getItem('token');var addTask=function addTask(newTask){fetch(url+\"/todo\",{method:'POST',body:JSON.stringify(newTask),headers:{'Accept':'application/json','Content-Type':'application/json','token':token}}).then(function(res){if(res.status===200)return res.json();else if(res.status===403)localStorage.removeItem('token');}).then(function(data){setTodos([].concat(_toConsumableArray(todos),[data.todo]));});};function showAddModalHandler(){setShowAddModal(true);}function closeModalHandler(){setShowAddModal(false);}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"-btn_add\",onClick:showAddModalHandler,children:/*#__PURE__*/_jsx(IoAddCircle,{})}),showAddModal&&/*#__PURE__*/_jsx(Backdrop,{onClick:closeModalHandler}),showAddModal&&/*#__PURE__*/_jsx(Modal,{text:'Add',onClose:closeModalHandler,onConfirm:addTask})]});};export default NewTaskButton;","map":{"version":3,"sources":["/Users/nephthalimabebe/Desktop/react-todo/client/src/components/Dashboard/NewTaskButton.js"],"names":["React","useState","IoAddCircle","Modal","Backdrop","NewTaskButton","setTodos","todos","showAddModal","setShowAddModal","url","token","localStorage","getItem","addTask","newTask","fetch","method","body","JSON","stringify","headers","then","res","status","json","removeItem","data","todo","showAddModalHandler","closeModalHandler"],"mappings":"sVAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,KAA4B,iBAA5B,CACA,MAAO,qBAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,6IAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAyB,IAAtBC,CAAAA,QAAsB,MAAtBA,QAAsB,CAAZC,KAAY,MAAZA,KAAY,CAC3C,cAAwCN,QAAQ,CAAC,KAAD,CAAhD,wCAAOO,YAAP,eAAqBC,eAArB,eACA,GAAMC,CAAAA,GAAG,CAAG,uBAAZ,CACA,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,OAAD,CAAa,CACzBC,KAAK,CACDN,GAAG,CAAG,OADL,CAED,CACIO,MAAM,CAAE,MADZ,CAEIC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf,CAFV,CAGIM,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAGL,QAASV,KAHJ,CAHb,CAFC,CAAL,CAYEW,IAZF,CAYO,SAACC,GAAD,CAAS,CACZ,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CAAxB,IACK,IAAIF,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwBZ,YAAY,CAACc,UAAb,CAAwB,OAAxB,EAEhC,CAhBD,EAgBGJ,IAhBH,CAgBQ,SAACK,IAAD,CAAU,CACdrB,QAAQ,8BAAKC,KAAL,GAAYoB,IAAI,CAACC,IAAjB,GAAR,CACH,CAlBD,EAmBH,CApBD,CAqBA,QAASC,CAAAA,mBAAT,EAA+B,CAC3BpB,eAAe,CAAC,IAAD,CAAf,CACH,CAGD,QAASqB,CAAAA,iBAAT,EAA6B,CACzBrB,eAAe,CAAC,KAAD,CAAf,CACH,CAED,mBACI,wCACI,YAAK,SAAS,CAAC,UAAf,CAA0B,OAAO,CAAEoB,mBAAnC,uBACI,KAAC,WAAD,IADJ,EADJ,CAIMrB,YAAD,eAAkB,KAAC,QAAD,EAAU,OAAO,CAAEsB,iBAAnB,EAJvB,CAKKtB,YAAY,eAAI,KAAC,KAAD,EAAO,IAAI,CAAE,KAAb,CAAoB,OAAO,CAAEsB,iBAA7B,CAAgD,SAAS,CAAEhB,OAA3D,EALrB,GADJ,CASH,CA3CD,CA6CA,cAAeT,CAAAA,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport { IoAddCircle } from \"react-icons/io5\";\nimport './NewTaskButton.css'\nimport Modal from './Modal'\nimport Backdrop from './Backdrop';\n\nconst NewTaskButton = ({ setTodos, todos }) => {\n    const [showAddModal, setShowAddModal] = useState(false);\n    const url = \"http://localhost:5000\"\n    const token = localStorage.getItem('token');\n    const addTask = (newTask) => {\n        fetch(\n            url + \"/todo\",\n            {\n                method: 'POST',\n                body: JSON.stringify(newTask),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'token': token,\n                }\n            }\n\n        ).then((res) => {\n            if (res.status === 200) return res.json();\n            else if (res.status === 403) localStorage.removeItem('token')\n\n        }).then((data) => {\n            setTodos([...todos, data.todo])\n        })\n    }\n    function showAddModalHandler() {\n        setShowAddModal(true);\n    }\n\n\n    function closeModalHandler() {\n        setShowAddModal(false);\n    }\n\n    return (\n        <>\n            <div className='-btn_add' onClick={showAddModalHandler}>\n                <IoAddCircle />\n            </div>\n            {(showAddModal) && <Backdrop onClick={closeModalHandler} />}\n            {showAddModal && <Modal text={'Add'} onClose={closeModalHandler} onConfirm={addTask} />}\n        </>\n    )\n}\n\nexport default NewTaskButton\n"]},"metadata":{},"sourceType":"module"}