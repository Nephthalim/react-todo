{"ast":null,"code":"var _jsxFileName = \"/Users/nephthalimabebe/Desktop/react-todo/client/src/pages/DashboardPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../components/Dashboard/Navbar';\nimport TodoList from '../components/Dashboard/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DashboardPage = ({\n  setAuthentication\n}) => {\n  _s();\n\n  const [todoList, setTodoList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState({\n    name: \"\"\n  });\n  const token = localStorage.getItem(\"token\");\n  const url = \"http://localhost:5000\";\n\n  const getUser = () => {\n    fetch(url + \"/\", {\n      method: 'GET',\n      headers: {\n        'token': token\n      }\n    }).then(res => {\n      if (res.status === 200) return res.json();\n    }).then(data => {\n      setUser({\n        name: data.name\n      });\n    });\n  };\n\n  const getTodoList = () => {\n    fetch(url + \"/todo\", {\n      method: 'GET',\n      headers: {\n        'token': token\n      }\n    }).then(res => {\n      if (res.status === 200) return res.json();\n    }).then(data => {\n      setTodoList(data.todos);\n    });\n  };\n\n  const searchTask = searchQuery => {\n    console.log(`Searching ${searchQuery}`);\n    fetch(url + '/search?query=' + searchQuery.query, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': \"application/json\",\n        \"token\": token\n      }\n    }).then(res => {\n      if (res.status === 200) return res.json();\n    }).then(data => {\n      setTodoList(data.searchResult);\n    });\n  };\n\n  const deleteTodo = id => {\n    console.log(todoList);\n    setTodoList(todoList.filter(todo => todo.id !== id));\n    console.log(todoList);\n  };\n\n  const dummy_task = [{\n    name: 'Clean',\n    description: 'I need to clean my house',\n    date_created: '2021-07-24',\n    important: false\n  }, {\n    name: 'Run',\n    description: 'I need to go for a run',\n    date_created: '2021-07-24',\n    important: false\n  }, {\n    name: 'Clean',\n    description: 'I need to clean my house',\n    date_created: '2021-07-24',\n    important: true\n  }, {\n    name: 'Run',\n    description: 'I need to go for a run',\n    date_created: '2021-07-24',\n    important: false\n  }, {\n    name: 'Clean',\n    description: 'I need to clean my house',\n    date_created: '2021-07-24',\n    important: true\n  }, {\n    name: 'Run',\n    description: 'I need to go for a run',\n    date_created: '2021-07-24',\n    important: true\n  }, {\n    name: 'Clean',\n    description: 'I need to clean my house',\n    date_created: '2021-07-24',\n    important: true\n  }, {\n    name: 'Run',\n    description: 'I need to go for a run',\n    date_created: '2021-07-24',\n    important: true\n  }, {\n    name: 'Clean',\n    description: 'I need to clean my house',\n    date_created: '2021-07-24',\n    important: true\n  }, {\n    name: 'Run',\n    description: 'I need to go for a run',\n    date_created: '2021-07-24',\n    important: false\n  }];\n  useEffect(() => {\n    setIsLoading(true);\n    getUser();\n    getTodoList();\n    setIsLoading(false);\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        name: user.name,\n        setAuthentication: setAuthentication,\n        searchTask: searchTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todoList,\n        deleteTodo: deleteTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(DashboardPage, \"3YDcl5P8PS3vPkijqKOkT9Xo0Ss=\");\n\n_c = DashboardPage;\nexport default DashboardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"sources":["/Users/nephthalimabebe/Desktop/react-todo/client/src/pages/DashboardPage.js"],"names":["React","useState","useEffect","Navbar","TodoList","DashboardPage","setAuthentication","todoList","setTodoList","isLoading","setIsLoading","user","setUser","name","token","localStorage","getItem","url","getUser","fetch","method","headers","then","res","status","json","data","getTodoList","todos","searchTask","searchQuery","console","log","query","searchResult","deleteTodo","id","filter","todo","dummy_task","description","date_created","important"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,QAAP,MAAqB,kCAArB;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2B;AAAA;;AAE7C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;AAAEY,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAhC;AAEA,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAMC,GAAG,GAAG,uBAAZ;;AAEA,QAAMC,OAAO,GAAG,MAAM;AAClBC,IAAAA,KAAK,CACDF,GAAG,GAAG,GADL,EAED;AACIG,MAAAA,MAAM,EAAE,KADZ;AAEIC,MAAAA,OAAO,EAAE;AACL,iBAASP;AADJ;AAFb,KAFC,CAAL,CASEQ,IATF,CASQC,GAAD,IAAS;AACZ,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB,OAAOD,GAAG,CAACE,IAAJ,EAAP;AAE3B,KAZD,EAYGH,IAZH,CAYSI,IAAD,IAAU;AACdd,MAAAA,OAAO,CAAC;AAAEC,QAAAA,IAAI,EAAEa,IAAI,CAACb;AAAb,OAAD,CAAP;AAEH,KAfD;AAgBH,GAjBD;;AAkBA,QAAMc,WAAW,GAAG,MAAM;AACtBR,IAAAA,KAAK,CACDF,GAAG,GAAG,OADL,EAED;AACIG,MAAAA,MAAM,EAAE,KADZ;AAEIC,MAAAA,OAAO,EAAE;AACL,iBAASP;AADJ;AAFb,KAFC,CAAL,CASEQ,IATF,CASQC,GAAD,IAAS;AACZ,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB,OAAOD,GAAG,CAACE,IAAJ,EAAP;AAE3B,KAZD,EAYGH,IAZH,CAYSI,IAAD,IAAU;AACdlB,MAAAA,WAAW,CAACkB,IAAI,CAACE,KAAN,CAAX;AAGH,KAhBD;AAkBH,GAnBD;;AAqBA,QAAMC,UAAU,GAAIC,WAAD,IAAiB;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAa,aAAYF,WAAY,EAArC;AACAX,IAAAA,KAAK,CACDF,GAAG,GAAG,gBAAN,GAAyBa,WAAW,CAACG,KADpC,EAED;AACIb,MAAAA,MAAM,EAAE,KADZ;AAEIC,MAAAA,OAAO,EACP;AACI,wBAAgB,kBADpB;AAEI,iBAASP;AAFb;AAHJ,KAFC,CAAL,CASOQ,IATP,CASaC,GAAD,IAAS;AACb,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB,OAAOD,GAAG,CAACE,IAAJ,EAAP;AAC3B,KAXL,EAWOH,IAXP,CAWaI,IAAD,IAAU;AACdlB,MAAAA,WAAW,CAACkB,IAAI,CAACQ,YAAN,CAAX;AACH,KAbL;AAcH,GAhBD;;AAkBA,QAAMC,UAAU,GAAIC,EAAD,IAAQ;AACvBL,IAAAA,OAAO,CAACC,GAAR,CAAYzB,QAAZ;AACAC,IAAAA,WAAW,CAACD,QAAQ,CAAC8B,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAApC,CAAD,CAAX;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYzB,QAAZ;AACH,GAJD;;AAOA,QAAMgC,UAAU,GAAG,CACf;AACI1B,IAAAA,IAAI,EAAE,OADV;AAEI2B,IAAAA,WAAW,EAAE,0BAFjB;AAGIC,IAAAA,YAAY,EAAE,YAHlB;AAIIC,IAAAA,SAAS,EAAE;AAJf,GADe,EAOf;AACI7B,IAAAA,IAAI,EAAE,KADV;AAEI2B,IAAAA,WAAW,EAAE,wBAFjB;AAGIC,IAAAA,YAAY,EAAE,YAHlB;AAIIC,IAAAA,SAAS,EAAE;AAJf,GAPe,EAaf;AACI7B,IAAAA,IAAI,EAAE,OADV;AAEI2B,IAAAA,WAAW,EAAE,0BAFjB;AAGIC,IAAAA,YAAY,EAAE,YAHlB;AAIIC,IAAAA,SAAS,EAAE;AAJf,GAbe,EAmBf;AACI7B,IAAAA,IAAI,EAAE,KADV;AAEI2B,IAAAA,WAAW,EAAE,wBAFjB;AAGIC,IAAAA,YAAY,EAAE,YAHlB;AAIIC,IAAAA,SAAS,EAAE;AAJf,GAnBe,EAyBf;AACI7B,IAAAA,IAAI,EAAE,OADV;AAEI2B,IAAAA,WAAW,EAAE,0BAFjB;AAGIC,IAAAA,YAAY,EAAE,YAHlB;AAIIC,IAAAA,SAAS,EAAE;AAJf,GAzBe,EA+Bf;AACI7B,IAAAA,IAAI,EAAE,KADV;AAEI2B,IAAAA,WAAW,EAAE,wBAFjB;AAGIC,IAAAA,YAAY,EAAE,YAHlB;AAIIC,IAAAA,SAAS,EAAE;AAJf,GA/Be,EAqCf;AACI7B,IAAAA,IAAI,EAAE,OADV;AAEI2B,IAAAA,WAAW,EAAE,0BAFjB;AAGIC,IAAAA,YAAY,EAAE,YAHlB;AAIIC,IAAAA,SAAS,EAAE;AAJf,GArCe,EA2Cf;AACI7B,IAAAA,IAAI,EAAE,KADV;AAEI2B,IAAAA,WAAW,EAAE,wBAFjB;AAGIC,IAAAA,YAAY,EAAE,YAHlB;AAIIC,IAAAA,SAAS,EAAE;AAJf,GA3Ce,EAiDf;AACI7B,IAAAA,IAAI,EAAE,OADV;AAEI2B,IAAAA,WAAW,EAAE,0BAFjB;AAGIC,IAAAA,YAAY,EAAE,YAHlB;AAIIC,IAAAA,SAAS,EAAE;AAJf,GAjDe,EAuDf;AACI7B,IAAAA,IAAI,EAAE,KADV;AAEI2B,IAAAA,WAAW,EAAE,wBAFjB;AAGIC,IAAAA,YAAY,EAAE,YAHlB;AAIIC,IAAAA,SAAS,EAAE;AAJf,GAvDe,CAAnB;AA+DAxC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAQ,IAAAA,OAAO;AACPS,IAAAA,WAAW;AACXjB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GALQ,EAKN,EALM,CAAT;;AAMA,MAAID,SAAJ,EAAe;AACX,wBACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND,MAOK;AACD,wBACI;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEE,IAAI,CAACE,IAAnB;AAAyB,QAAA,iBAAiB,EAAEP,iBAA5C;AAA+D,QAAA,UAAU,EAAEuB;AAA3E;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEtB,QAAjB;AAA2B,QAAA,UAAU,EAAE4B;AAAvC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,oBADJ;AASH;AACJ,CAhKD;;GAAM9B,a;;KAAAA,a;AAkKN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Navbar from '../components/Dashboard/Navbar'\nimport TodoList from '../components/Dashboard/TodoList'\n\nconst DashboardPage = ({ setAuthentication }) => {\n\n    const [todoList, setTodoList] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [user, setUser] = useState({ name: \"\" });\n\n    const token = localStorage.getItem(\"token\")\n    const url = \"http://localhost:5000\"\n\n    const getUser = () => {\n        fetch(\n            url + \"/\",\n            {\n                method: 'GET',\n                headers: {\n                    'token': token,\n                }\n            }\n\n        ).then((res) => {\n            if (res.status === 200) return res.json();\n\n        }).then((data) => {\n            setUser({ name: data.name })\n\n        })\n    }\n    const getTodoList = () => {\n        fetch(\n            url + \"/todo\",\n            {\n                method: 'GET',\n                headers: {\n                    'token': token,\n                }\n            }\n\n        ).then((res) => {\n            if (res.status === 200) return res.json();\n\n        }).then((data) => {\n            setTodoList(data.todos)\n\n\n        })\n\n    }\n\n    const searchTask = (searchQuery) => {\n        console.log(`Searching ${searchQuery}`)\n        fetch(\n            url + '/search?query=' + searchQuery.query,\n            {\n                method: \"GET\",\n                headers:\n                {\n                    'Content-Type': \"application/json\",\n                    \"token\": token\n                }\n            }).then((res) => {\n                if (res.status === 200) return res.json()\n            }).then((data) => {\n                setTodoList(data.searchResult)\n            })\n    }\n\n    const deleteTodo = (id) => {\n        console.log(todoList)\n        setTodoList(todoList.filter(todo => todo.id !== id))\n        console.log(todoList)\n    }\n\n\n    const dummy_task = [\n        {\n            name: 'Clean',\n            description: 'I need to clean my house',\n            date_created: '2021-07-24',\n            important: false,\n        },\n        {\n            name: 'Run',\n            description: 'I need to go for a run',\n            date_created: '2021-07-24',\n            important: false,\n        },\n        {\n            name: 'Clean',\n            description: 'I need to clean my house',\n            date_created: '2021-07-24',\n            important: true,\n        },\n        {\n            name: 'Run',\n            description: 'I need to go for a run',\n            date_created: '2021-07-24',\n            important: false,\n        },\n        {\n            name: 'Clean',\n            description: 'I need to clean my house',\n            date_created: '2021-07-24',\n            important: true,\n        },\n        {\n            name: 'Run',\n            description: 'I need to go for a run',\n            date_created: '2021-07-24',\n            important: true,\n        },\n        {\n            name: 'Clean',\n            description: 'I need to clean my house',\n            date_created: '2021-07-24',\n            important: true,\n        },\n        {\n            name: 'Run',\n            description: 'I need to go for a run',\n            date_created: '2021-07-24',\n            important: true,\n        },\n        {\n            name: 'Clean',\n            description: 'I need to clean my house',\n            date_created: '2021-07-24',\n            important: true,\n        },\n        {\n            name: 'Run',\n            description: 'I need to go for a run',\n            date_created: '2021-07-24',\n            important: false,\n        },\n    ]\n\n    useEffect(() => {\n        setIsLoading(true);\n        getUser();\n        getTodoList();\n        setIsLoading(false);\n    }, [])\n    if (isLoading) {\n        return (\n            <section>\n                <p>Loading...</p>\n            </section>\n        );\n    }\n    else {\n        return (\n            <>\n                <Navbar name={user.name} setAuthentication={setAuthentication} searchTask={searchTask} />\n                {/* <Navbar name={\"Nephy\"} setAuthentication={setAuthentication} searchTask={searchTask} /> */}\n                <TodoList todos={todoList} deleteTodo={deleteTodo} />\n\n            </>\n        )\n\n    }\n}\n\nexport default DashboardPage\n"]},"metadata":{},"sourceType":"module"}